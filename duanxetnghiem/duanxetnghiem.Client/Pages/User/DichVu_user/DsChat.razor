@page "/Listchat"
@inject NavigationManager navigation;
<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Thêm đoạn chạt</button>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
	<div class="modal-dialog">
		<!-- Modal content-->
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">Thêm đoạn chat mới</h4>
				<button type="button" class="close" data-dismiss="modal">&times;</button>

			</div>
			<div class="modal-body">
				<EditForm Model="Inputkq" method="post" OnValidSubmit="add" FormName="register">
					<DataAnnotationsValidator />
					<ValidationSummary class="text-danger" role="alert" />
					<InputText style="width: 70%; height: 40px; border-radius: 5px;" @bind-Value="Inputkq" placeholder="Nhập tên" />
					<ValidationMessage For="() => Inputkq" class="text-danger" />
					<div class="row justify-content-center">
						<button type="submit" class="btn btn-dark ">Xem kết quả</button>
					</div>
				</EditForm>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			</div>
		</div>

	</div>
</div>
	<table>
	@foreach (var room in allroom)
	{
		
		<tr>
			<td>
					@room.Id
			</td>
			<td>
				<a href="/Chat/@room.Id">@room.Name</a>
			</td>
		</tr>
		
	}
</table>
@code {
	[Inject]
	protected AuthenticationStateProvider AuthenticationStateProvider { get; set; }
	public string UserName { get; set; }
	public User user { get; set; } = new();
	public List<roomchat> allroom { get; set; } = new();

	[SupplyParameterFromForm]
	public String Inputkq { get; set; } = new("");
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		UserName = authState.User.Identity.Name;
		user = await Usertservice.getuserbyemail(UserName);
		allroom = await Roomchatservice.getallbyidAsync(user.Id);
	}
	private async Task add()
	{
		if (string.IsNullOrEmpty(Inputkq))
		{
		}
		else
		{
			roomchat room = new roomchat
			{
				Name=Inputkq,
				userid=user.Id
			};
			var a = await Roomchatservice.addAsync(room);
			allroom.Add(a);
			navigation.NavigateTo("/Chat/" + a.Id);
		}
	}
}
