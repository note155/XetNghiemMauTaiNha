@page "/dichvu"
@rendermode InteractiveAuto
 @inject NavigationManager navigation;
 @using Shared.Model;
@using Microsoft.AspNetCore.Authorization
@using Shared.form

<div class="background-container" style="background-image: url('anhnen.jpg');">
    <div class="row d-flex align-items-center justify-content-center" style="width: 100%; height: 300px;margin:auto;">
        <div class="col-md-6 d-flex flex-column align-items-center">
            <!-- title -->
            <div class="title">
                Xét nghiệm máu tại nhà
            </div>
            <!-- description -->
            <div class="description">
                Chẩn đoán sớm, chăm sóc sức khỏe của bạn
            </div>
            <div class="d-flex flex-row gap-3">
                <a href="quytrinh" class="secondary btn" style="width: 140px; height: 48px; border: 1px solid #000000; border-radius: 8px; display: flex; justify-content: center; align-items: center; margin-top: 30px;">
                    <div style="font-family: 'Roboto'; font-weight: 500; font-size: 20px; line-height: 24px; color: #000000;">
                        Chi tiết
                    </div>
                </a>
                <a href="quytrinh" class="secondary btn" style="width: 140px; height: 48px; border-radius: 8px; display: flex; justify-content: center; align-items: center; text-decoration: none; background-color: #000000; color: #FFFFFF;  margin-top: 30px;">
                    <div style="font-family: 'Roboto'; font-weight: 500; font-size: 20px; line-height: 24px;">
                        Đặt lịch hẹn
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>
<!-- các gói dịch vụ-->
@hasRendered
<div class="container" style="width: 100%;">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="section text-center py-5">
                <h1 class="title">Gói Dịch Vụ Xét Nghiệm Sức Khỏe</h1>
                <p class="description">Cung cấp các gói xét nghiệm máu phù hợp với nhu cầu của bạn</p>
            </div>
        </div>
    </div>
</div>

<div class="package-container">
    @if (!AllGoi.Any())
    {
        <p><em>Loading ...</em></p>
    }
    @if (AllGoi.Any())
    {
        @foreach (var goi in AllGoi)
        {
            <div class="package-item">
                <div class="package-item-photo">
                    <a href="/ChiTietGoiXetNghiem" class="post-image-container" tabindex="-1">
                        <div class="package-item-photo">
                            <img src="@goi.Anh" alt="" loading="lazy">
                        </div>
                    </a>
                </div>
                <div class="package-item-detail">
                    <div class="package-item-price">@goi.Gia VND</div>
                    <h3 class="package-item-title">@goi.TenGoi</h3>
                    <div class="package-item-meta">
                        <div class="package-item-gender">@goi.ThoiGian</div>
                    </div>
                    <div @onclick="@(() => themgio(goi.Id))" class="plus-icon-container">
                        <span  class="plus-icon">&#10133;</span>
                    </div>

                </div>
            </div>
        }
    }
</div>
<nav aria-label="Page navigation">
    <nav id="pagination-7960274864" aria-label="Page navigation" class="text-center">
        <ul class="pagination mb-0 justify-content-center">
            <!-- Nút trang trước -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a aria-label="Trước" class="page-nav previous page-link" rel="tooltip" tabindex="-1" title="Trước" @onclick="(() => ChangePage(currentPage - 1))">
                    <i class="fa fa-angle-left"></i>
                    <span>&#10094;</span>
                </a>
            </li>
            <!-- Các nút trang -->
            @for (var pageNumber = 1; pageNumber <= totalPages; pageNumber++)
            {
                var localPageNumber = pageNumber; // Tạo biến cục bộ ở đây
                <li class="page-item @(pageNumber == currentPage ? "active" : "")">
                    <a class="page-link" @onclick="(() => ChangePage(localPageNumber))">@pageNumber</a>
                </li>
            }

            <!-- Nút trang tiếp theo -->
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a aria-label="Kế tiếp" class="page-nav next page-link" rel="tooltip" tabindex="-1" title="Kế tiếp" @onclick="(() => ChangePage(currentPage + 1))">
                    <i class="fa fa-angle-right"></i>
                    <span>&#10095;</span>
                </a>
            </li>
        </ul>
    </nav>
</nav>

@code {
    [Inject]
    protected AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    public string UserName { get; set; }
    public User user { get; set; } = new();
    public List<GoiXetNghiem> AllGoi { get; set; } = new();
    private int itemsPerPage = 6; // Số lượng mục trên mỗi trang
    private int currentPage = 1;
    private int totalPages;
    private bool hasRendered ;


    protected override async Task OnInitializedAsync()
    {
        await LoadAlLGoi();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserName = authState.User.Identity.Name;
        user = await Usertservice.getuserbyemail(UserName);
    }
    public async void themgio(int id)
    {
        GioHang a = new GioHang
        {
            GoiXetNghiemId=id,
            IsSelected=false,
            UserId=user.Id
        };
        hasRendered = await GHservice.kiemtra(a);
        if (hasRendered)
        {

        }
        else
        {
            await GHservice.addAsync(a);
        }

    }
    public async Task LoadAlLGoi()
    {
        var goi = await GXNservice.getallAsync();
        AllGoi.Clear();

        if (goi is null) return;

        totalPages = (int)Math.Ceiling((double)goi.Count / itemsPerPage);

        foreach (var g in goi.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage))
        {
            AllGoi.Add(g);
        }
    }
    private async Task ChangePage(int pageNumber)
    {
        if (pageNumber < 1 || pageNumber > totalPages || pageNumber == currentPage)
        {
            return;
        }

        currentPage = pageNumber;
        await LoadAlLGoi();  // Gọi phương thức để load dữ liệu cho trang mới
        StateHasChanged();
    }
}