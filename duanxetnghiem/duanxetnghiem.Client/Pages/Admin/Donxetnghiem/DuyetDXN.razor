@page "/XetDuyetDXN/{id:int}"
@rendermode InteractiveAuto
 @inject NavigationManager navigation;
<div class="patient-registration-container">
<div class="patient-info">
    <h2>Thông tin bệnh nhân</h2>
    <div class="info">
        <p><strong>Họ tên:</strong> @user.Hoten</p>
        <p><strong>Tuổi:</strong> @user.Tuoi</p>
        <p><strong>Số điện thoại:</strong> @user.SDT</p>
        <p><strong>Địa chỉ:</strong> @user.Diachi</p>
        <p><strong>Email:</strong> @user.Email</p>
            <p><strong>Giới tính:</strong> @gioitinh(@user.Gioitinh)</p>
    </div>
</div>

<div class="test-registration-form">
    <h2>Thông tin đơn đăng ký xét nghiệm</h2>
    <EditForm Model="Input" method="post" OnValidSubmit="add" FormName="register" class="profile-form">
        <DataAnnotationsValidator />
        <hr />

        @if (err.Any())
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in err)
                {
                    <p>@error</p>
                }
            </div>
        }
        <div class="form-group">
            <label for="ngaytaodon">Ngày tạo đơn</label>
            <InputDate @bind-Value="Input.ngaytaodon" class="form-control" id="Ngaytaodon" readonly />
            <ValidationMessage For="() => Input.ngaytaodon" class="text-danger" />
        </div>
        <div class="form-group">
            <label for="Ngaydat">Ngày Lấy Máu</label>
                <InputDate @bind-Value="Input.Ngaydat" class="form-control" id="Ngaydat" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <ValidationMessage For="() => Input.Ngaydat" class="text-danger" />
        </div>
        <div class="form-group">
            <label for="giolaymau">Giờ lấy máu</label>
                <InputSelect id="giolaymau" @bind-Value="Input.giolaymau" class="form-control">
                    <option value="5h30">5h30</option>
                    <option value="6h">6h</option>
                    <option value="6h30">6h30</option>
                    <option value="7h">7h</option>
                    <option value="7h30">7h30</option>
                    <option value="8h">8h</option>
                    <option value="8h30">8h30</option>
                    <option value="9h">9h</option>
                    <option value="9h30">9h30</option>
                    <option value="10h">10h</option>
                    <option value="10h30">10h30</option>
                    <option value="11h">11h</option>
                    <option value="11h30">11h30</option>
                    <option value="12h">12h</option>
                    <option value="12h30">12h30</option>
                    <option value="13h">13h</option>
                    <option value="13h30">13h30</option>
                    <option value="14h">14h</option>
                    <option value="14h30">14h30</option>
                    <option value="15h">15h</option>
                    <option value="15h30">15h30</option>
                    <option value="16h">16h</option>
                    <option value="16h30">16h30</option>
                    <option value="17h">17h</option>
                    <option value="17h30">17h30</option>
                    <option value="18h">18h</option>
                    <option value="18h30">18h30</option>
                    <option value="19h">19h</option>
                    <option value="19h30">19h30</option>
                    <option value="20h">20h</option>
                    <option value="20h30">20h30</option>
                    <option value="21h">21h</option>
                </InputSelect>
        </div>
        <div class="form-group">
            <label for="ghiChu">Ghi chú của bệnh nhân</label>
            <InputTextArea @bind-Value="Input.ghiChu" class="form-control" id="ghiChu" />
            <ValidationMessage For="() => Input.ghiChu" class="text-danger" />
        </div>
        <div class="form-group">
            <label for="GoiXetNghiemId">Gói xét nghiệm</label>
            <InputSelect class="form-control" id="GoiXetNghiemId" @bind-Value="Input.GoiXetNghiemId">
                <option value="@Input.GoiXetNghiemId">@loadGXN(@Input.GoiXetNghiemId)</option>
                @foreach (var gxn in allGXN)
                {
                    <option value="@gxn.Id">@gxn.TenGoi</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="BacSiId">Nhân viên lấy máu</label>
            <InputSelect ValueChanged="@((int value)=>LoadBSInfo(value))" ValueExpression="@(()=>valor)" Value="valor" class="form-control" id="BacSiId">
                <option value="">Chọn Bác Sĩ</option>
                @foreach (var bs in AllBS)
                {
                    <option value="@bs.Id">@bs.Hoten</option>
                }
            </InputSelect>
        </div>
            @if (SelectedDoctor != null)
            {
                <div class="doctor-info">        
                    <div class="doctor-details">
                        <h3>Thông tin bác sĩ:</h3>
                        <p><strong>Họ tên:</strong> @SelectedDoctor.Hoten</p>
                        <p><strong>Chức vụ:</strong> @SelectedDoctor.Chucvu</p>
                        <p><strong>Số điện thoại:</strong> @SelectedDoctor.SDT</p>
                        <p><strong>Email:</strong> @SelectedDoctor.Email</p>
                    </div>
                    <div class="doctor-image">
                        <img src="@SelectedDoctor.Anh" alt="Ảnh bác sĩ">
                    </div>
                    
                    <!-- Thêm các trường thông tin khác của bác sĩ nếu cần -->
                </div>
            }
            <a href="/ListDXN"><button style="background-color:red" class="btn btn-primary"> Hủy </button></a>
            <button type="submit" class="btn btn-primary">Duyệt</button>
            
        </EditForm>
    </div>
</div>
       

@code {
    private List<string> err = new List<string>();
    private User user = new User();
    public List<GoiXetNghiem> allGXN { get; set; } = new();
    public List<BacSi> AllBS { get; set; } = new();
    private BacSi SelectedDoctor = null;
    int valor,idbs;

    [SupplyParameterFromForm]
    public DonXetNghiem Input { get; set; } = new();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Input = await DXNservice.getbyid(id);
        user = await Usertservice.getuserbyid(Input.UserId);
        allGXN = await GXNservice.getallAsync();
        AllBS = await bacsiservice.getallAsync();
    }
    private async Task add()
    {
        err.Clear(); // Xóa danh sách lỗi trước đó
                     // Kiểm tra ngày lấy máu
                     // Kiểm tra giờ lấy máu
        if (string.IsNullOrWhiteSpace(Input.giolaymau))
        {
            err.Add("Giờ lấy máu không được để trống.");
        }
        // Kiểm tra gói xét nghiệm
        if (Input.GoiXetNghiemId == 0)
        {
            err.Add("Vui lòng chọn gói xét nghiệm.");
        }
        // Kiểm tra nhân viên lấy máu
        if (idbs == 0)
        {
            err.Add("Vui lòng chọn nhân viên lấy máu.");
        }

        // Nếu có lỗi, hiển thị thông báo lỗi và không tiếp tục thực hiện việc cập nhật dữ liệu
        if (err.Any())
        {
            return;
        }
        Input.BacSiId = idbs;
        Input.Trangthai = "Đã Duyệt";
        await DXNservice.updateAsync(Input);
        navigation.NavigateTo("/ListDXN");
    }
    public String loadGXN(int id)
    {
        foreach (var gxn in allGXN)
        {
            if (gxn.Id == id)
            {
                return gxn.TenGoi;
            }
        }
        return null;
    }
    private void LoadBSInfo(int id)
    {
        idbs = id;
        valor = id;
        if (id != 0)
        {
            SelectedDoctor = AllBS.FirstOrDefault(bs => bs.Id == id)!;
        }

    }
    private String gioitinh(bool a)
    {
        if (a)
        {
            return "Nam";
        }
        else
        {
            return "Nữ";
        }
    }
}
