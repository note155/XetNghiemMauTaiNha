@page "/XacNhanLayMau/{id:int}"
@rendermode InteractiveAuto
 @inject NavigationManager navigation;
 @attribute [Authorize]

<div id="map" style="height: 400px;"></div>
<div class="patient-registration-container">
    <div class="patient-info">
        <h2>Thông tin bệnh nhân</h2>
        <div class="info">
            <p><strong>Họ tên:</strong> @user.Hoten</p>
            <p><strong>Tuổi:</strong> @user.Tuoi</p>
            <p><strong>Số điện thoại:</strong> @user.SDT</p>
            <p><strong>Địa chỉ:</strong> @user.Diachi</p>
            <p><strong>Email:</strong> @user.Email</p>
            <p><strong>Giới tính:</strong> @gioitinh(@user.Gioitinh)</p>
        </div>
    </div>

    <div class="test-registration-form">
        <h2>Thông tin đơn đăng ký xét nghiệm</h2>
        @if (err.Any())
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in err)
                {
                    <p>@error</p>
                }
            </div>
        }
        <div style="background-color:greenyellow;color:black" class="btn btn-primary btn-lg disabled">  <strong>Trạng Thái: </strong>@Input.Trangthai</div>
        <EditForm Model="Input" method="post" OnValidSubmit="add" FormName="register" class="profile-form">
            <DataAnnotationsValidator />
            <hr />


            <div class="form-group">
                <label for="ngaytaodon">Ngày tạo đơn</label>
                <InputDate @bind-Value="Input.ngaytaodon" class="form-control" id="Ngaytaodon" readonly />
                <ValidationMessage For="() => Input.ngaytaodon" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="Ngaydat">Ngày Lấy Máu</label>
                <InputDate @bind-Value="Input.Ngaydat" class="form-control" id="Ngaydat" min="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                <ValidationMessage For="() => Input.Ngaydat" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="giolaymau">Giờ lấy máu</label>
                <InputText @bind-Value="Input.giolaymau" class="form-control" id="giolaymau" readonly />
                <ValidationMessage For="() => Input.giolaymau" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="ghiChu">Ghi chú của bệnh nhân</label>
                <InputTextArea @bind-Value="Input.ghiChu" class="form-control" id="ghiChu" readonly />
                <ValidationMessage For="() => Input.ghiChu" class="text-danger" />
            </div>
            <div class="doctor-info">
                <div class="selected-packages-header">
                    <h3>Các gói đã chọn:</h3>
                </div>
                <div class="selected-packages">
                    @foreach (var bs in gxndachon)
                    {
                        <div class="package">
                            <div class="package-content">
                                <p><strong>Tên Gói:</strong> @bs.TenGoi</p>
                                <div class="price">Giá: @bs.Gia VND</div>
                            </div>
                        </div>
                    }
                </div>
                <div class="total-mobile">
                    <p>Tổng tiền: <span class="total">@tongtien VND</span></p>
                </div>
            </div>

            <!--Button-->
            <button type="button" style="background-color:red" class="btn btn-primary" onclick="toggleForm()"> Chưa hoàn thành </button>
            <button style="background-color:forestgreen" type="submit" class="btn btn-primary">Hoàn thành</button>
        </EditForm>
        <!--Nếu chưa hoàn thành-->
        <div id="rejectForm" style="display:none;">
            <EditForm Model="Chuathanhcong" method="post" OnValidSubmit="chuathanhcong" FormName="register">
                <DataAnnotationsValidator />
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-group">
                    <label for="Lydo">Lý Do Lấy Mẫu Thất Bại:</label>
                    <InputSelect ValueChanged="@((String value)=>LoadBSInfo(value))" ValueExpression="@(()=>valor)" Value="valor" class="form-control" id="Lydo">
                        <option value="">Chọn Lý Do</option>
                        <option value="Đến địa điểm nhưng không liên lạc được khách">Đến địa điểm nhưng không liên lạc được khách</option>
                        <option value="Khách hàng bận đột xuất">Khách hàng bận đột xuất</option>
                        <option value="Khách hàng gặp vấn đề sức khỏe">Khách hàng gặp vấn đề sức khỏe</option>
                        <option value="Sai sót trong quy trình lấy mẫu từ phía khách hàng">Sai sót trong quy trình lấy mẫu từ phía khách hàng</option>
                        <option value="Yêu cầu hủy bỏ xét nghiệm từ bên đăng ký">Yêu cầu hủy bỏ xét nghiệm từ bên đăng ký</option>
                        <option value="0">Khác</option>
                    </InputSelect>
                </div>
                @if (@idbs == "0")
                {
                    <div class="form-group">
                        <label for="ngaytaodon">Lý Do Khác:</label>
                        <InputText @bind-Value="Chuathanhcong.Lydo" class="form-control" id="Lydo" />
                        <ValidationMessage For="() =>Chuathanhcong.Lydo" class="text-danger" />
                    </div>
                }
                <button type="submit" style="background-color:black" class="btn btn-primary">Xác nhận </button>
            </EditForm>
        </div>
    </div>
</div>
@code {
    string diachi1 = "23 Lý Nhân Tông,Tp Huế";
    string diachi2 = "";
    private List<string> err = new List<string>();
    private User user = new User();
    public List<GoiXetNghiem> allGXN { get; set; } = new();
    string valor, idbs;
    public List<GoiXetNghiem> gxndachon { get; set; } = new();
    public List<DXNandGXN> dxn { get; set; } = new();
    public long tongtien = 0;

    [SupplyParameterFromForm]
    public DonXetNghiem Input { get; set; } = new();

    [SupplyParameterFromForm]
    public TuChoi Chuathanhcong { get; set; } = new();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Input = await DXNservice.getbyid(id);
        user = await Usertservice.getuserbyid(Input.UserId);
        allGXN = await GXNservice.getallAsync();
        diachi2 = user.Diachi;
        dxn = await DXNservice.getallGXNAsync(id);
        loadgxndachon();

    }
    private void loadgxndachon()
    {
        foreach (var a in dxn)
        {

            foreach (var b in allGXN)
            {
                if (b.Id == a.GoiXetNghiemId)
                {
                    gxndachon.Add(b);
                    tongtien += b.Gia;
                }
            }
            allGXN.RemoveAll(item => item.Id == a.GoiXetNghiemId);
        }
    }
    private async Task add()
    {
        Input.Trangthai = "Lấy mẫu thành công";
        await DXNservice.updateAsync(Input);
        navigation.NavigateTo("/DXNBS");
    }
    private async Task chuathanhcong()
    {
        if (idbs != "0")
        {
            Chuathanhcong.Lydo = valor;
        }
        if (string.IsNullOrWhiteSpace(Chuathanhcong.Lydo))
        {
            err.Add("Vui Lòng Nhập Lý Do Lấy Mẫu Thất Bại!");
            return;
        }

        Chuathanhcong.DonXetNghiemId = id;
        Input.Trangthai = "Lấy mẫu thất bại";
        await DXNservice.updateAsync(Input);
        await TCservice.addAsync(Chuathanhcong);
        navigation.NavigateTo("/DXNBS");
    }
    public String loadGXN(int id)
    {
        foreach (var gxn in allGXN)
        {
            if (gxn.Id == id)
            {
                return gxn.TenGoi;
            }
        }
        return null;
    }
    private String gioitinh(bool a)
    {
        if (a)
        {
            return "Nam";
        }
        else
        {
            return "Nữ";
        }
    }
    private void LoadBSInfo(string id)
    {
        idbs = id;
        valor = id;
    }
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        initMap();
    });
    function initMap() {
        var diachi1 = "@diachi1"; // Lấy giá trị diachi1 từ code Blazor
        var diachi2 = "@diachi2"; // Lấy giá trị diachi2 từ code Blazor
        var directionsService = new google.maps.DirectionsService();
        var directionsRenderer = new google.maps.DirectionsRenderer();
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        directionsRenderer.setMap(map);

        var request = {
            origin: diachi1,
            destination: diachi2,
            travelMode: google.maps.TravelMode.DRIVING
        };

        directionsService.route(request, function (result, status) {
            if (status == 'OK') {
                directionsRenderer.setDirections(result);
            } else {
                alert('Directions request failed due to ' + status);
            }
        });
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap" async defer></script>

@* Chưa hoàn thành *@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var form = document.getElementById("rejectForm");
        form.style.display = "none";
    });
</script>
<script>
    function toggleForm() {
        var form = document.getElementById("rejectForm");
        if (form.style.display === "none") {
            form.style.display = "block";
        } else {
            form.style.display = "none";
        }
    }
</script>