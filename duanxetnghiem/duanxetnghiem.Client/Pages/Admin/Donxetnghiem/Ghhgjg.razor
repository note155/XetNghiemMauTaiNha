@page "/huhu"

<div class="row">
    @foreach (var group in GroupedDXNs)
    {
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@group.DiaChi</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>id</th>
                                    <th>Họ Tên Khách Hàng</th>
                                    <th>Trạng thái</th>
                                    <th>Ngày lấy máu</th>
                                    <th>Giờ lấy máu</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var DXN in group.DXNs)
                                {
                                    <tr>
                                        <td>@DXN.Id</td>
                                        <td>@loadhoten(DXN.UserId)</td>
                                        <td>@DXN.Trangthai</td>
                                        <td>@DXN.Ngaydat.ToString("dd/MM/yyyy")</td>
                                        <td>@DXN.giolaymau</td>
                                        <td>
                                            <a class="btn btn-success" href="/XetDuyetDXN/@DXN.Id">Duyệt</a>
                                        </td>
                                        <td>
                                            <a class="btn btn-danger" href="/TuChoiDXN/@DXN.Id">Từ Chối</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Đơn yêu cầu xét nghiệm</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <p><a class="btn btn-success float-end" href="/datlich"> Tạo đơn </a></p>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (!AllDXN.Any())
                            {
                                <p><em>Loading ...</em></p>
                            }
                            @if (AllDXN.Any())
                            {
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th>id</th>
                                                    <th>Họ Tên Khách Hàng</th>
                                                    <th>Trạng thái</th>
                                                    <th>Ngày lấy máu </th>
                                                    <th>Giờ lấy máu </th>
                                                    <th></th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var DXN in AllDXN)
                                                {
                                                    <tr>
                                                        <td>@DXN.Id</td>
                                                        <td>@loadhoten(DXN.UserId)</td>>
                                                        <td>@DXN.Trangthai</td>
                                                        <td>@DXN.Ngaydat.ToString("dd/MM/yyyy")</td>
                                                        <td>@DXN.giolaymau</td>
                                                        <td>
                                                            <a class="btn btn-success" href="/XetDuyetDXN/@DXN.Id"> Duyệt </a>
                                                        </td>
                                                        <td>
                                                            <a class="btn btn-danger" href="/TuChoiDXN/@DXN.Id"> Từ Chối </a>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info"> There is not DXN List Availlable</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    public List<DonXetNghiem> AllDXN { get; set; } = new();
    public List<GoiXetNghiem> allGXN { get; set; } = new();
    public List<User> allUser { get; set; } = new();
    public class GroupedDXN
    {
        public string DiaChi { get; set; }
        public List<DonXetNghiem> DXNs { get; set; }
    }

    // Define a list to hold grouped DXNs
    public List<GroupedDXN> GroupedDXNs { get; set; } = new List<GroupedDXN>();

    // Method to group DXNs by address
    public void GroupDXNsByAddress()
    {
        GroupedDXNs.Clear();

        // Group DXNs by address
        var grouped = AllDXN.GroupBy(dxn => dxn.User.Diachi);

        // Iterate through each group
        foreach (var group in grouped)
        {
            // Create a new GroupedDXN object
            var groupedDXN = new GroupedDXN
                {
                    DiaChi = group.Key, // Key is the address
                    DXNs = group.ToList() // List of DXNs in this group
                };

            // Add the grouped DXN to the list
            GroupedDXNs.Add(groupedDXN);
        }
    }

    // Call the method to group DXNs when component initializes
    protected override async Task OnInitializedAsync()
    {
        await LoadAlLStudents();
        allGXN = await GXNservice.getallAsync();
        allUser = await Usertservice.getalluserAsync();

        // Group DXNs by address
        GroupDXNsByAddress();
    }


    public async Task LoadAlLStudents()
    {
        // var students = await GenericService.GetAllAsync(student, "api/Student/All-Students");
        var DXN = await DXNservice.getallAsync();
        AllDXN.Clear();

        if (DXN is null) return;
        foreach (var student in DXN)
        {
            if (student.Trangthai == "Chờ Thanh Toán" || student.Trangthai == "Đã Chuyển Tiền")
            {
                AllDXN.Add(student);
            }
        }
    }
    public String loadGXN(int id)
    {
        foreach (var gxn in allGXN)
        {
            if (gxn.Id == id)
            {
                return gxn.TenGoi;
            }
        }
        return null;
    }
    public String loadhoten(int id)
    {
        foreach (var us in allUser)
        {
            if (us.Id == id)
            {
                return us.Hoten;
            }
        }
        return null;
    }
}
